{"version":3,"sources":["components/Wrapper/index.js","components/Header/index.js","utils/API.js","components/Nav/index.js","components/Table/index.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","props","className","children","Header","axios","get","Nav","searchFilter","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","onChange","e","Table","useState","users","setUsers","filteredUsers","setFilteredUsers","sortOrder","setSortOrder","sortOrder2","setSortOrder2","useEffect","API","then","results","data","filter","target","value","filteredUserList","item","Object","values","join","toLowerCase","indexOf","console","log","onClick","filteredUsersList","sort","a","b","name","last","dob","age","map","login","picture","phone","email","key","uuid","src","thumbnail","alt","first","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.572e415e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Wrapper(props) {\r\n    return (\r\n        <div className='wrapper'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='header text-info py-5 '>\r\n            <h1>Employee Directory</h1>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nexport default {\r\n    getUsers: function () {\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Nav = ({ searchFilter }) => {\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-info\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                    <input\r\n                        className=\"form-control mr-sm-2\"\r\n                        type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        onChange={e => searchFilter(e)}\r\n                    />\r\n                </form>\r\n\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Nav;","import React, { useState, useEffect } from 'react';\r\nimport API from '../../utils/API';\r\nimport Nav from '../Nav';\r\n\r\nconst Table = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [sortOrder, setSortOrder] = useState('descend');\r\n    const [sortOrder2, setSortOrder2] = useState('descend');\r\n\r\n    useEffect(() => {\r\n        API.getUsers().then(results => {\r\n            setUsers(results.data.results)\r\n            setFilteredUsers(results.data.results)\r\n        })\r\n    }, [setSortOrder]);\r\n\r\n    const searchFilter = (e) => {\r\n        const filter = e.target.value;\r\n        const filteredUserList = users.filter(item => {\r\n            let values = Object.values(item).join(\"\").toLowerCase();\r\n            return values.indexOf(filter.toLowerCase()) !== -1;\r\n        });\r\n        setFilteredUsers(filteredUserList);\r\n        console.log(filteredUsers)\r\n    }\r\n\r\n    const sortNames = () => {\r\n        if (sortOrder === 'descend') {\r\n            const filteredUsersList = users.sort((a, b) => {\r\n                if (a.name.last < b.name.last) { return -1; }\r\n                if (a.name.last > b.name.last) { return 1; }\r\n            });\r\n            setFilteredUsers(filteredUsersList);\r\n            setSortOrder('ascend');\r\n            console.log(filteredUsers)\r\n            \r\n        } else {\r\n            const filteredUsersList = users.sort((a, b) => {\r\n                if (a.name.last < b.name.last) { return 1; }\r\n                if (a.name.last > b.name.last) { return -1; }\r\n            });\r\n\r\n            setFilteredUsers(filteredUsersList);\r\n            setSortOrder('descend');\r\n            \r\n        }\r\n    }\r\n\r\n    const sortAges = () => {\r\n        if (sortOrder2 === 'descend') {\r\n            const filteredUsersList = users.sort((a, b) => {\r\n                if (a.dob.age < b.dob.age) { return -1; }\r\n                if (a.dob.age > b.dob.age) { return 1; }\r\n            });\r\n            setFilteredUsers(filteredUsersList);\r\n            setSortOrder2('ascend');\r\n            \r\n        } else {\r\n            const filteredUsersList = users.sort((a, b) => {\r\n                if (a.dob.age < b.dob.age) { return 1; }\r\n                if (a.dob.age > b.dob.age) { return -1; }\r\n            });\r\n\r\n            setFilteredUsers(filteredUsersList);\r\n            setSortOrder2('descend');\r\n            \r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Nav searchFilter={searchFilter} />\r\n\r\n            <table className='table table-hover mt-5'>\r\n                <tbody>\r\n                    <tr>\r\n                        <th >Photo</th>\r\n                        <th>Name\r\n                            <button className=\"ml-2\">\r\n                                <i className=\"fas fa-sort\" onClick={sortNames} ></i>\r\n                            </button>\r\n                        </th>\r\n                        <th >Contact Phone</th>\r\n                        <th >Email</th>\r\n                        <th >Age\r\n                            <button className=\"ml-2\">\r\n                                <i className=\"fas fa-sort\" onClick={sortAges}></i>\r\n                            </button>\r\n                        </th>\r\n                    </tr>\r\n                    {filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\r\n                        return (\r\n\r\n                            <tr key={login.uuid}>\r\n                                <td> <img src={picture.thumbnail} alt={name} /></td>\r\n                                <td>{name.first} {name.last}</td>\r\n                                <td>{phone}</td>\r\n                                <td>{email}</td>\r\n                                <td>{dob.age} </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Table;","import React from 'react';\nimport Wrapper from './components/Wrapper';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper> \n        <Header />\n        <Table />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}